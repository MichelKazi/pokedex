{"version":3,"sources":["logo.svg","Trainer.js","Input.js","Dialogue.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pokemon","name","stats","this","Trainer","pokemonList","all","bind","addPokemon","fetchPokeAPI","input","then","acquiredPokemon","weight","hp","base_stat","attack","defense","abilities","map","ability","replace","pokemonToAdd","spriteURL","sprites","front_default","push","isNaN","console","log","require","get","response","data","catch","error","Input","props","state","id","onChange","e","setState","target","value","onClick","onSubmit","Component","Dialogue","messages","dialogueIndex","style","cursor","src","alt","xmlns","xmlnsXlink","width","height","x","y","xlinkHref","App","trainer","acknowledged","typing","acknowledge","makeTrainer","window","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5459faf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","class Pokemon {\n    constructor(name, stats) {\n        this.name = name\n        this.stats = stats\n    }\n}\n\nclass Trainer {\n    constructor(name) {\n        this.name = name\n        this.pokemonList = []\n\n        //binding this keyword for methods\n        this.all = this.all.bind(this)\n        this.addPokemon = this.addPokemon.bind(this)\n        this.fetchPokeAPI = this.fetchPokeAPI.bind(this)\n    }\n\n    all () {\n        return this.pokemonList\n    }\n\n    addPokemon(input) {\n        return this.fetchPokeAPI(input).then(acquiredPokemon => {\n            const stats = {\n                weight : acquiredPokemon.weight,\n                hp : acquiredPokemon.stats[5].base_stat, // For every single Pokemon JSON, \n                attack : acquiredPokemon.stats[4].base_stat, // these indices for stats will\n                defense : acquiredPokemon.stats[3].base_stat, // always be the same \n                abilities : acquiredPokemon.abilities.map( abilities => {\n                    return abilities.ability.name.replace('-', ' ')\n                })    \n            }\n            const pokemonToAdd = new Pokemon(acquiredPokemon.name, stats)\n            pokemonToAdd.spriteURL = acquiredPokemon.sprites.front_default\n            this.pokemonList.push(pokemonToAdd)\n            return isNaN(input) ? console.log(`${input} was added to ${this.name}'s list of pokemon!`) : console.log(`Pokemon with ID: ${input} was added to ${this.name}'s list of pokemon!`)\n        })\n\n    }\n\n    fetchPokeAPI(input) {\n        const axios = require('axios');\n        // Make a request for a user with a given ID\n        return axios.get(`https://fizal.me/pokeapi/api/v2/${isNaN(input)?'name/':'id/'}${input}.json`)\n            .then(function (response) {\n                console.log(response);\n                return response.data\n            })\n            .catch(function (error) {\n                console.log(`${input} was not a valid entry!`)\n            })\n    }\n}\nexport default Trainer\n","import React, { Component } from 'react'\n\nexport class Input extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: null\n        }\n    }\n    render() {\n        return (\n            <>\n                <input id='name-box' onChange={(e) => this.setState({name: e.target.value })} />\n                <button id = \"submit-btn\" onClick={() => this.props.onSubmit(this.state.name)}>Enter</button>\n            </>\n        )\n    }\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport Input from './Input'\n\nexport class Dialogue extends Component {\n    render() {\n        return (\n            <div id=\"dialogue-box\">\n                <p id=\"dialogue-text\">\n                    {messages[this.props.dialogueIndex]}\n                </p>\n                <img style={{ cursor: 'pointer' }} \n                    onClick={this.props.onClick}  \n                    src=\"https://www.shareicon.net/data/256x256/2015/11/01/665144_arrows_512x512.png\" \n                    alt=\"\"\n                />\n                {this.props.dialogueIndex === 2 && <Input onSubmit={this.props.onSubmit}/>}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"708px\" height=\"212px\">\n                    <image x=\"0px\" y=\"0px\" width=\"708px\" height=\"212px\"\n                        xlinkHref=\"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAsQAAADUBAMAAABpMigCAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAElBMVEUAAAAAAAC24eybvsfW1tb////zyHjRAAAAAXRSTlMAQObYZgAAAAFiS0dEBfhv6ccAAAAHdElNRQfjCxAVASaqNnAlAAADe0lEQVR42u3YUW6jMBhFYbwD02QDyQ5QVhBp9r+mCQQb0oFUGnxqxTrfU6rpw6+jK6ah60L/1IkyF+5j7UOalUbsjDF9/3UdOWNM30+FrxcTl7U8f+cRP2Ycax/VlLA8f03M6Jc/I0yMCPMD+PKYsYkRIXU1MSXMf0U8ZmxiholxJsbtJF6+S+uguJ1YBZn4F6wS53cUKmqd+CuP+HRTEcNL4rAKX/uydrwk7iwMeE2cZ3yqfVdDhn71jmLmiMvqV2/acuFT7auaMuTHb3TEjCXx8pw4/fNv+i9zyPRjXBKn/LUv/Hx5qq8vhnLi2vc1IM84biYeat/XgveJa1/XhLTWzcRD7euacHqTeJh+448OGAu+SWzh4+5pxpuJpxGfa9/44e5pxpuJHXEJPyY+177w46UnxV7ic+0DGzDPeC9x7fNaMM/YxBwT80yMu5uYZmKciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXHvE59rn9eC/m1iZ3zc/YfE59oHfr7+TeLBxgWMI37W3Eg8zdhHxUHziHcSO+Pj0oh3Ejvj49KI9xJPM9ZRt+3Ep2XGOial/J74md7GBaQHwmvikNoPte/7fDlk1zljRu64HvCTMy7iW8b43O/spmKWqqsRp/4qYFiqxseIv64jZ1zSWHPKennMeP44fnbGpYwjfi73OiaeP15r/zfRmmuarokpW4lj7aNaErYTh9p3tSPuJO5UjIlxJsaZGGdinIlxJsa9JM7vKGLts1oS1u8o8pu2WPusloTVm7aQv5HUvqotyxe95XOsfVRbwmq5wREj8nL/AiYL3itMy597AAAAAElFTkSuQmCC\" />\n                </svg>\n            </div>\n        )\n    }\n}\n\n\n\nconst messages = ['Welcome to the World of POKÃ©MON!', 'My name jeff', `What your name is cuh`, 'this is a dialogue too.']\n\n\n\nexport default Dialogue\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Trainer from './Trainer';\nimport Dialogue from './Dialogue'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainer: null,\n      acknowledged : false,\n      dialogueIndex: 0,\n      typing: false\n    }\n\n    //bind this\n    this.acknowledge = this.acknowledge.bind(this)\n    this.makeTrainer = this.makeTrainer.bind(this)\n  }\n  componentDidMount() {\n    window.trainer = new Trainer('')\n  }\n\n  acknowledge() {\n    this.setState({\n      acknowledged: true, \n      dialogueIndex: this.state.dialogueIndex+1,\n      typing: true\n    })\n  }\n\n  makeTrainer(name){\n    this.setState({\n      dialogueIndex: this.state.dialogueIndex + 1,\n      trainer: new Trainer(name)\n    })\n    window.trainer = new Trainer(name)\n  }\n \n  render() {\n    console.log('app.js state', this.state)\n   return (\n     <div id=\"dialogue-container\">\n       <img id=\"oak\" src=\"https://www.spriters-resource.com/resources/sheet_icons/4/3701.png\" alt=\"\"></img>\n       <Dialogue dialogueIndex={this.state.dialogueIndex} onClick={this.acknowledge} onSubmit={this.makeTrainer}/>\n     </div>\n     \n   );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}