{"version":3,"sources":["logo.svg","Pokemon.js","Trainer.js","components/Input.js","components/Dialogue.js","components/PokeballMarker.js","components/PokemonCard.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","require","Pokemon","queryData","id","a","get","isNaN","response","acquiredPokemon","data","name","hp","stats","base_stat","attack","defense","weight","spriteURL","sprites","front_default","abilities","map","ability","replace","Promise","resolve","console","error","this","Math","floor","random","Trainer","pokemonList","all","bind","addPokemon","input","added","push","filter","pokemon","Input","props","state","onChange","e","setState","target","value","onClick","onSubmit","Component","messages","PokeballMarker","setPokemon","_","randomQuery","then","pokemonHandler","style","cursor","src","width","alt","PokemonCard","Map","viewport","height","latitude","longitude","zoom","labelShowing","navigatorChecked","showLabel","hideLabel","locate","prevProps","prevState","locations","Array","fill","lat","lng","cb","navigator","geolocation","getCurrentPosition","userLocation","coords","log","className","mapboxApiAccessToken","onViewportChange","zIndex","offsetLeft","offsetTop","captureClick","App","trainer","acknowledged","dialogueIndex","typing","acknowledge","makeTrainer","window","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.789e3adc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","const axios = require('axios')\r\nexport class Pokemon {\r\n    constructor() {\r\n        this.name = null\r\n    }\r\n\r\n    randomQuery() {\r\n        return this.queryData(Math.floor(Math.random() * 800) + 1)\r\n    } // This method is meant for the map to randomize pokemon throughout the \r\n\r\n    queryData = async (id) => {\r\n        let response\r\n\r\n        try {\r\n            response = await axios.get(`https://fizal.me/pokeapi/api/v2/${isNaN(id) ? 'name/' : 'id/'}${id}.json`)\r\n            const acquiredPokemon = response.data\r\n            \r\n            this.name = acquiredPokemon.name\r\n            this.id = acquiredPokemon.id\r\n            this.hp = acquiredPokemon.stats[5].base_stat// For every single Pokemon JSON, \r\n            this.attack = acquiredPokemon.stats[4].base_stat // these indices for stats will\r\n            this.defense = acquiredPokemon.stats[3].base_stat // always be the same \r\n            this.weight = acquiredPokemon.weight\r\n            this.spriteURL = acquiredPokemon.sprites.front_default\r\n\r\n            this.abilities = acquiredPokemon.abilities.map(abilities => {\r\n                return abilities.ability.name.replace('-', ' ')\r\n            })\r\n            \r\n            return Promise.resolve(this)\r\n        }\r\n        catch (err) {\r\n            console.error(err)\r\n        }\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default Pokemon","import Pokemon from './Pokemon'\n\n\nexport class Trainer {\n    constructor(name) {\n        this.name = name\n        this.pokemonList = []\n\n        //binding this keyword for methods\n        this.all = this.all.bind(this)\n        this.addPokemon = this.addPokemon.bind(this)\n    }\n\n    all () {\n        return this.pokemonList\n    }\n\n    addPokemon(input) {\n        const added = new Pokemon()\n        added.queryData(input)\n        this.pokemonList.push(added)\n    }\n\n    removePokemon(input) {\n        // eslint-disable-next-line eqeqeq\n        this.pokemonList = this.pokemonList.filter(pokemon => isNaN(input) ? pokemon.id!=input : pokemon.name!=input)\n        //this line doesn't work :(\n    }\n\n}\nexport default Trainer\n","import React, { Component } from 'react'\n\nexport class Input extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: null\n        }\n    }\n    render() {\n        return (\n            <>\n                <input id='name-box' onChange={(e) => this.setState({name: e.target.value })} />\n                <button id = \"submit-btn\" onClick={() => this.props.onSubmit(this.state.name)}>Enter</button>\n            </>\n        )\n    }\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport Input from './Input'\n\nexport class Dialogue extends Component {\n    render() {\n        return (\n            <div id=\"dialogue-box\">\n                <p id=\"dialogue-text\">\n                    {messages[this.props.dialogueIndex]}\n                </p>\n                <img style={{ cursor: 'pointer' }} \n                    onClick={this.props.onClick}  \n                    src=\"https://www.shareicon.net/data/256x256/2015/11/01/665144_arrows_512x512.png\" \n                    alt=\"\"\n                />\n                {this.props.dialogueIndex === 2 && <Input onSubmit={this.props.onSubmit}/>}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"708px\" height=\"212px\">\n                    <image x=\"0px\" y=\"0px\" width=\"708px\" height=\"212px\"\n                        xlinkHref=\"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAsQAAADUBAMAAABpMigCAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAElBMVEUAAAAAAAC24eybvsfW1tb////zyHjRAAAAAXRSTlMAQObYZgAAAAFiS0dEBfhv6ccAAAAHdElNRQfjCxAVASaqNnAlAAADe0lEQVR42u3YUW6jMBhFYbwD02QDyQ5QVhBp9r+mCQQb0oFUGnxqxTrfU6rpw6+jK6ah60L/1IkyF+5j7UOalUbsjDF9/3UdOWNM30+FrxcTl7U8f+cRP2Ycax/VlLA8f03M6Jc/I0yMCPMD+PKYsYkRIXU1MSXMf0U8ZmxiholxJsbtJF6+S+uguJ1YBZn4F6wS53cUKmqd+CuP+HRTEcNL4rAKX/uydrwk7iwMeE2cZ3yqfVdDhn71jmLmiMvqV2/acuFT7auaMuTHb3TEjCXx8pw4/fNv+i9zyPRjXBKn/LUv/Hx5qq8vhnLi2vc1IM84biYeat/XgveJa1/XhLTWzcRD7euacHqTeJh+448OGAu+SWzh4+5pxpuJpxGfa9/44e5pxpuJHXEJPyY+177w46UnxV7ic+0DGzDPeC9x7fNaMM/YxBwT80yMu5uYZmKciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXEmxpkYZ2KciXHvE59rn9eC/m1iZ3zc/YfE59oHfr7+TeLBxgWMI37W3Eg8zdhHxUHziHcSO+Pj0oh3Ejvj49KI9xJPM9ZRt+3Ep2XGOial/J74md7GBaQHwmvikNoPte/7fDlk1zljRu64HvCTMy7iW8b43O/spmKWqqsRp/4qYFiqxseIv64jZ1zSWHPKennMeP44fnbGpYwjfi73OiaeP15r/zfRmmuarokpW4lj7aNaErYTh9p3tSPuJO5UjIlxJsaZGGdinIlxJsa9JM7vKGLts1oS1u8o8pu2WPusloTVm7aQv5HUvqotyxe95XOsfVRbwmq5wREj8nL/AiYL3itMy597AAAAAElFTkSuQmCC\" />\n                </svg>\n            </div>\n        )\n    }\n}\n\n\n\nconst messages = ['Welcome to the World of POKéMON!', 'My name jeff', `What your name is cuh`, 'Alright thats all I need']\n\n\n\nexport default Dialogue\n","import React, { Component } from 'react'\nimport Pokemon from '../Pokemon'\n\nexport class PokeballMarker extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      pokemon: null\n    }\n\n    this.setPokemon=this.setPokemon.bind(this)\n  }\n\n\n  setPokemon() {\n    const p = this.state.pokemon ? () => Promise.resolve(this.state.pokemon) : _ => {\n      const fetchedPokemon = new Pokemon();\n      return fetchedPokemon.randomQuery().then(pokemon => {this.setState({ pokemon }); return pokemon})\n    }\n\n    p().then(pokemon => {\n      this.props.pokemonHandler(pokemon)\n    })\n  }\n\n  render() {\n    return (\n      <div onClick={this.setPokemon} style={{ cursor: 'pointer' }}>\n        <img src=\"https://image.flaticon.com/icons/png/512/188/188918.png\" width=\"24\" alt=\"pokeball\" />\n      </div>\n    )\n  }\n}\n\nexport default PokeballMarker\n","import React, { Component } from 'react'\r\nimport '../styles/pokemonCard.scss'\r\n\r\nexport class PokemonCard extends Component {\r\n\r\n\r\n    render() {   \r\n        return (\r\n            <div>\r\n                {!this.props.pokemon && <div id=\"no-card\">\r\n                    <h2>Welcome!</h2>\r\n                    <img src=\"http://pixelartmaker.com/art/dc12aa356cb08f1.png\" width=\"150\" alt=\"\"></img> \r\n                    <h3>Click on a pokeball and find out what's in it!</h3>   \r\n                </div>}\r\n\r\n                {this.props.pokemon && <div id=\"card\" >\r\n                   <h1>{this.props.pokemon.name}</h1> \r\n                    <img src={this.props.pokemon.spriteURL} alt=\"\"></img>\r\n                    <p>HP: {this.props.pokemon.hp}</p>\r\n                    <p>Attack: {this.props.pokemon.attack}</p>\r\n                    <p>Defense: {this.props.pokemon.defense}</p>\r\n                    <p>Weight: {this.props.pokemon.weight}</p>\r\n                </div>}\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default PokemonCard\r\n","import React, { Component } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport PokeballMarker from './PokeballMarker';\nimport PokemonCard from './PokemonCard';\nimport '../styles/map.scss'\n\n\nexport class Map extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewport: {\n        width: \"70%\",\n        height: \"100vh\",\n        latitude: 40.704200,\n        longitude: -74.011020,\n        zoom: 7\n      },\n      labelShowing: false,\n      navigatorChecked: false,\n      pokemon: null\n    };\n    //binding the this keyword\n    this.showLabel = this.showLabel.bind(this)\n    this.hideLabel = this.hideLabel.bind(this)\n    this.locate = this.locate.bind(this)\n    this.pokemonHandler = this.pokemonHandler.bind(this)\n  }\n\n  componentDidMount() {\n    this.locate()\n  } //locate is left here because this will toggle navigatorChecked\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.navigatorChecked !== this.state.navigatorChecked) {\n      const locations = Array(50).fill(0)\n        .map(() => ({\n          lat: this.state.viewport.latitude + ((Math.random() - 0.5) / 15),\n          lng: this.state.viewport.longitude + ((Math.random() - 0.5) / 15),\n        }));\n      this.setState({ locations })\n    }\n  }\n\n  locate(cb = _ => { }) {\n    if (!navigator) {\n      this.setState({ navigatorChecked: true }, cb())\n    } else {\n      navigator.geolocation.getCurrentPosition(userLocation => {\n        this.setState({\n          navigatorChecked: true,\n          viewport: {\n            width: \"70%\",\n            height: \"100vh\",\n            longitude: userLocation.coords.longitude,\n            latitude: userLocation.coords.latitude,\n            zoom: 13\n          },\n        }, cb())\n      })\n    }\n  }\n\n  pokemonHandler(pokemon){\n    this.setState({ pokemon })\n    console.log(pokemon);\n    \n  }  //handler recieves pokemon from clicked pokeball\n\n  showLabel() {\n    this.setState({\n      labelShowing: true,\n    })\n  }\n\n  hideLabel() {\n    this.setState({ labelShowing: false })\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactMapGL className=\"map\"\n          mapboxApiAccessToken={'pk.eyJ1IjoibWthemkiLCJhIjoiY2szNm42Y214MDM5djNjcnozcmFseGplaiJ9.romUGZKRAwbaprnN_LrRiw'}\n          {...this.state.viewport}\n          onViewportChange={(viewport) => this.setState({ viewport })}\n        >\n           <PokemonCard pokemon={this.state.pokemon} style={{ zIndex: 1 }}></PokemonCard>\n          {this.state.navigatorChecked && this.state.locations && this.state.locations.map(({ lat, lng }) => (\n            <Marker latitude={lat} longitude={lng} offsetLeft={-20} offsetTop={-10} style={{ zIndex: 21 }} captureClick={false}>\n              <PokeballMarker pokemonHandler={this.pokemonHandler} />\n            </Marker>\n          ))}\n\n\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default Map","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport Trainer from './Trainer';\nimport Dialogue from './components/Dialogue'\nimport Map from './components/Map'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainer: null,\n      acknowledged : false,\n      dialogueIndex: 0,\n      typing: false\n    }\n\n    //bind this\n    this.acknowledge = this.acknowledge.bind(this)\n    this.makeTrainer = this.makeTrainer.bind(this)\n  }\n  componentDidMount() {\n    window.trainer = new Trainer('')\n  }\n\n  acknowledge() {\n    this.setState({\n      acknowledged: true, \n      dialogueIndex: this.state.dialogueIndex+1,\n      typing: true\n    })\n  }\n\n  makeTrainer(name){\n    this.setState({\n      dialogueIndex: this.state.dialogueIndex + 1,\n      trainer: new Trainer(name)\n    })\n    window.trainer = new Trainer(name)\n  }\n \n  render() { \n    console.log('app.js state', this.state)\n   return (\n     <div id=\"dialogue-container\">\n       \n       {/* <img id=\"oak\" src=\"https://www.spriters-resource.com/resources/sheet_icons/4/3701.png\" alt=\"\"></img> */}\n       <Map />\n       {/* <Dialogue dialogueIndex={this.state.dialogueIndex} onClick={this.acknowledge} onSubmit={this.makeTrainer}/> */}\n     </div>\n     \n   );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}